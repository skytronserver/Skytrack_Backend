Watching for file changes with StatReloader
Performing system checks...

System check identified no issues (0 silenced).
January 18, 2024 - 06:44:09
Django version 4.2.9, using settings 'Skytronsystem.settings'
Starting development server at http://0.0.0.0:2000/
Quit the server with CONTROL-C.

/var/www/html/skytron_backend/Skytronsystem/skytron_api/views.py: Error [create_device]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/var/www/html/skytron_backend/Skytronsystem/skytron_api/views.py: Error [create_device_model]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/var/www/html/skytron_backend/Skytronsystem/skytron_api/views.py: Error [create_manufacturer]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/var/www/html/skytron_backend/Skytronsystem/skytron_api/views.py: Error [create_retailer]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/var/www/html/skytron_backend/Skytronsystem/skytron_api/views.py: Error [create_user]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/var/www/html/skytron_backend/Skytronsystem/skytron_api/views.py: Error [delete_device]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/var/www/html/skytron_backend/Skytronsystem/skytron_api/views.py: Error [delete_device_model]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/var/www/html/skytron_backend/Skytronsystem/skytron_api/views.py: Error [delete_manufacturer]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/var/www/html/skytron_backend/Skytronsystem/skytron_api/views.py: Error [delete_retailer]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/var/www/html/skytron_backend/Skytronsystem/skytron_api/views.py: Error [device_details]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/var/www/html/skytron_backend/Skytronsystem/skytron_api/views.py: Error [device_model_details]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/var/www/html/skytron_backend/Skytronsystem/skytron_api/views.py: Error [get_details]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/var/www/html/skytron_backend/Skytronsystem/skytron_api/views.py: Error [get_list]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/var/www/html/skytron_backend/Skytronsystem/skytron_api/views.py: Error [FileUploadView]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/var/www/html/skytron_backend/Skytronsystem/skytron_api/views.py: Error [list_device_models]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/var/www/html/skytron_backend/Skytronsystem/skytron_api/views.py: Error [list_devices]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/var/www/html/skytron_backend/Skytronsystem/skytron_api/views.py: Error [list_manufacturers]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/var/www/html/skytron_backend/Skytronsystem/skytron_api/views.py: Error [list_retailers]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/var/www/html/skytron_backend/Skytronsystem/skytron_api/views.py: Error [manufacturer_details]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/var/www/html/skytron_backend/Skytronsystem/skytron_api/views.py: Error [password_reset]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/var/www/html/skytron_backend/Skytronsystem/skytron_api/views.py: Error [retailer_details]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/var/www/html/skytron_backend/Skytronsystem/skytron_api/views.py: Error [send_email_confirmation]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/var/www/html/skytron_backend/Skytronsystem/skytron_api/views.py: Error [send_email_otp]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/var/www/html/skytron_backend/Skytronsystem/skytron_api/views.py: Error [send_pwrst_confirmation]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/var/www/html/skytron_backend/Skytronsystem/skytron_api/views.py: Error [send_sms_confirmation]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/var/www/html/skytron_backend/Skytronsystem/skytron_api/views.py: Error [send_sms_otp]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/var/www/html/skytron_backend/Skytronsystem/skytron_api/views.py: Error [update_device]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/var/www/html/skytron_backend/Skytronsystem/skytron_api/views.py: Error [update_device_model]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/var/www/html/skytron_backend/Skytronsystem/skytron_api/views.py: Error [update_manufacturer]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/var/www/html/skytron_backend/Skytronsystem/skytron_api/views.py: Error [update_retailer]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/var/www/html/skytron_backend/Skytronsystem/skytron_api/views.py: Error [update_user]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/var/www/html/skytron_backend/Skytronsystem/skytron_api/views.py: Error [user_get_parent]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/var/www/html/skytron_backend/Skytronsystem/skytron_api/views.py: Error [user_login]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/var/www/html/skytron_backend/Skytronsystem/skytron_api/views.py: Error [user_logout]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/var/www/html/skytron_backend/Skytronsystem/skytron_api/views.py: Error [validate_email_confirmation]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/var/www/html/skytron_backend/Skytronsystem/skytron_api/views.py: Error [validate_otp]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/var/www/html/skytron_backend/Skytronsystem/skytron_api/views.py: Error [validate_pwrst_confirmation]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/var/www/html/skytron_backend/Skytronsystem/skytron_api/views.py: Error [validate_sms_confirmation]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/var/www/html/skytron_backend/Skytronsystem/skytron_api/views.py: Error [list_vehicles]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/var/www/html/skytron_backend/Skytronsystem/skytron_api/views.py: Error [vehicle_details]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/var/www/html/skytron_backend/Skytronsystem/skytron_api/views.py: Error [delete_vehicle]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/var/www/html/skytron_backend/Skytronsystem/skytron_api/views.py: Error [update_vehicle]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/var/www/html/skytron_backend/Skytronsystem/skytron_api/views.py: Error [create_vehicle]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
Warning: operationId "vehicles_retrieve" has collisions [('/api/vehicles/', 'get'), ('/api/vehicles/{vehicle_id}/', 'get')]. resolving with numeral suffixes.
[18/Jan/2024 06:44:29] "GET /api/schema/ HTTP/1.1" 200 16551
