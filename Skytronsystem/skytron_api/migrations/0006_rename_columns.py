# Generated by Django 4.1.13 on 2024-07-23 16:05
# your_app_name/migrations/XXXX_rename_columns.py
from django.db import migrations
from django.apps import apps
from django.db import connection
from django.db import migrations, models
from django.db import connection
import logging
logger = logging.getLogger(__name__)
def rename_columns(apps, schema_editor):
    
    with connection.cursor() as cursor:
        app_config = apps.get_app_config('skytron_api')
        for model in app_config.get_models():
            table_name = model._meta.db_table
            current_columns = {}
            
            # Get current columns from the database
            cursor.execute(f"SELECT column_name FROM information_schema.columns WHERE table_name='{table_name}';")
            for row in cursor.fetchall():
                current_columns[row[0].lower()] = row[0]

            # Rename columns to match model field names
            for field in model._meta.fields:
                db_column = field.db_column or field.name
                db_column_lower = db_column.lower()
                if db_column_lower in current_columns and current_columns[db_column_lower] != db_column:
                    old_column = current_columns[db_column_lower]
                    new_column = db_column
                    try:
                        cursor.execute(f'ALTER TABLE {table_name} RENAME COLUMN "{old_column}" TO "{new_column}";')
                        logger.info(f'Renamed column {old_column} to {new_column} in table {table_name}')
                    except Exception as e:
                        logger.error(f'Could not rename column {old_column} to {new_column} in table {table_name}: {e}')


class Migration(migrations.Migration):

    dependencies = [
        ('skytron_api', '0005_alter_captcha_key'),
    ]

    operations = [
        migrations.RunPython(rename_columns),
    ]
 

 