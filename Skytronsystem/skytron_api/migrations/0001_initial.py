# Generated by Django 4.1.13 on 2025-04-23 18:41

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email')),
                ('mobile', models.CharField(max_length=15, unique=True, verbose_name='Mobile')),
                ('role', models.CharField(choices=[('superadmin', 'Super Admin'), ('stateadmin', 'State Admin'), ('devicemanufacture', 'Device Manufacture'), ('dealer', 'Dealer'), ('owner', 'Owner'), ('esimprovider', 'eSimProvider'), ('filment', 'Filment'), ('sosadmin', 'SOS Admin'), ('teamleader', 'Team Leader'), ('sosexecutive', 'SOS Executive')], max_length=20, verbose_name='Role')),
                ('usertype', models.CharField(default='main', max_length=10, verbose_name='User Type')),
                ('createdby', models.CharField(max_length=255, verbose_name='Created By')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('Access', models.JSONField(blank=True, default=list, null=True, verbose_name='Access')),
                ('password', models.CharField(default='12345678', max_length=100)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('address', models.CharField(blank=True, max_length=255, null=True, verbose_name='Address')),
                ('address_pin', models.CharField(blank=True, max_length=255, null=True, verbose_name='Address Pin')),
                ('address_State', models.CharField(blank=True, max_length=255, null=True, verbose_name='Address State')),
                ('dob', models.CharField(max_length=255, verbose_name='Date of Birth')),
                ('status', models.CharField(choices=[('active', 'Active'), ('deactive', 'Deactive')], max_length=10, verbose_name='Status')),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('last_activity', models.DateTimeField(blank=True, null=True)),
                ('login', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Captcha',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(default='1576fa0b85b54582a9b45ccd75bdea92', max_length=32, unique=True)),
                ('answer', models.IntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='DeviceModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model_name', models.CharField(max_length=255)),
                ('test_agency', models.CharField(max_length=255)),
                ('vendor_id', models.CharField(max_length=255)),
                ('tac_no', models.CharField(max_length=255)),
                ('tac_validity', models.DateField()),
                ('otp_time', models.DateTimeField()),
                ('hardware_version', models.CharField(max_length=255)),
                ('created', models.DateTimeField()),
                ('status', models.CharField(choices=[('Manufacturer_OTP_Sent', 'Manufacturer OTP Sent'), ('Manufacturer_OTP_Verified', 'Manufacturer OTP Verified'), ('StateAdminOTPSend', 'State Admin OTP Sent'), ('StateAdminApproved', 'State Admin Approved')], max_length=255)),
                ('tac_doc_path', models.FileField(blank=True, null=True, upload_to='tac_docs/')),
                ('otp', models.CharField(max_length=6)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DeviceStock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_esn', models.CharField(max_length=55, unique=True)),
                ('iccid', models.CharField(max_length=55, unique=True)),
                ('imei', models.CharField(max_length=55, unique=True)),
                ('telecom_provider1', models.CharField(max_length=25)),
                ('telecom_provider2', models.CharField(blank=True, max_length=25, null=True)),
                ('msisdn1', models.CharField(max_length=255, unique=True)),
                ('msisdn2', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('imsi1', models.CharField(blank=True, max_length=255, null=True)),
                ('imsi2', models.CharField(blank=True, max_length=255, null=True)),
                ('esim_validity', models.DateTimeField()),
                ('remarks', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField()),
                ('assigned', models.DateTimeField(blank=True, null=True)),
                ('shipping_remark', models.TextField(blank=True, null=True)),
                ('stock_status', models.CharField(choices=[('NotAssigned', 'NotAssigned'), ('In_transit_to_dealer', 'In Transit to Dealer'), ('Available_for_fitting', 'Available for Fitting'), ('Fitted', 'Fitted'), ('ESIM_Active_Req_Sent', 'ESIM Active Request Sent'), ('ESIM_Active_Confirmed', 'ESIM Active Confirmed'), ('ESIM_Active_Rejected', 'ESIM_Active_Rejected'), ('IP_PORT_Configured', 'IP Port Configured'), ('SOS_GATEWAY_NO_Configured', 'SOS Gateway No Configured'), ('SMS_GATEWAY_NO_Configured', 'SMS Gateway No Configured'), ('Device_Defective', 'Device Defective'), ('Returned_to_manufacturer', 'Returned to Manufacturer')], max_length=55)),
                ('esim_status', models.CharField(choices=[('NotAssigned', 'NotAssigned'), ('In_transit_to_dealer', 'In Transit to Dealer'), ('Available_for_fitting', 'Available for Fitting'), ('Fitted', 'Fitted'), ('ESIM_Active_Req_Sent', 'ESIM Active Request Sent'), ('ESIM_Active_Confirmed', 'ESIM Active Confirmed'), ('ESIM_Active_Rejected', 'ESIM_Active_Rejected'), ('IP_PORT_Configured', 'IP Port Configured'), ('SOS_GATEWAY_NO_Configured', 'SOS Gateway No Configured'), ('SMS_GATEWAY_NO_Configured', 'SMS Gateway No Configured'), ('Device_Defective', 'Device Defective'), ('Returned_to_manufacturer', 'Returned to Manufacturer')], max_length=55)),
                ('assigned_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='createby_USERdevicestock', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DeviceTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vehicle_reg_no', models.CharField(max_length=55, unique=True)),
                ('engine_no', models.CharField(max_length=55, unique=True)),
                ('chassis_no', models.CharField(max_length=55, unique=True)),
                ('vehicle_make', models.CharField(max_length=55)),
                ('vehicle_model', models.CharField(max_length=55)),
                ('category', models.CharField(max_length=55)),
                ('rc_file', models.CharField(max_length=255)),
                ('receipt_file_or', models.CharField(max_length=255)),
                ('receipt_file_ul', models.CharField(max_length=255)),
                ('status', models.CharField(choices=[('Dealer_OTP_Sent', 'Dealer OTP Sent'), ('Dealer_OTP_Verified', 'Dealer_OTP_Verified'), ('TempActive', 'TempActive'), ('Owner_OTP_Sent', 'Owner OTP Sent'), ('Owner_OTP_Verified', 'Owner OTP Verified'), ('RegNo_Configuration_SentToDevice', 'Reg No Configuration Sent to Device'), ('RegNo_Configuration_Confirmed', 'Reg No Configuration Confirmed'), ('Live_Location_Confirmed', 'Live Location Confirmed'), ('SOS_Confirmed', 'SOS Confirmed'), ('Device_Active', 'Device Active'), ('Device_Not_Active', 'Device Not Active'), ('Device_Untagged', 'Device Untagged'), ('TagDeleted', 'TagDeleted')], max_length=255)),
                ('tagged', models.DateTimeField()),
                ('otp', models.CharField(blank=True, max_length=6, null=True)),
                ('otp_time', models.DateTimeField(blank=True, null=True)),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='skytron_api.devicestock')),
            ],
        ),
        migrations.CreateModel(
            name='EditRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField(auto_now_add=True, verbose_name='Time')),
                ('type', models.CharField(choices=[('owner', 'Owner'), ('device', 'Device'), ('vehicle', 'Vehicle'), ('devicemodel', 'Device Model'), ('retailer', 'Retailer'), ('manufacturer', 'Manufacturer')], max_length=20, verbose_name='Type')),
                ('from_user', models.IntegerField(verbose_name='From User')),
                ('to_user', models.IntegerField(verbose_name='To User')),
                ('otp', models.IntegerField(verbose_name='OTP')),
                ('newdataid', models.IntegerField(verbose_name='New Data ID')),
                ('olddataid', models.IntegerField(verbose_name='Old Data ID')),
                ('status', models.CharField(choices=[('requestsent', 'Request Sent'), ('accepted', 'Accepted'), ('rejected', 'Rejected')], max_length=20, verbose_name='Status')),
            ],
        ),
        migrations.CreateModel(
            name='EM_admin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateField(auto_now_add=True)),
                ('expirydate', models.DateField(auto_now_add=True)),
                ('idProofno', models.CharField(blank=True, max_length=255, null=True)),
                ('file_idProof', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.CharField(choices=[('Created', 'Created'), ('UserVerified', 'UserVerified'), ('StateAdminVerified', 'StateAdminVerified'), ('UserExpired', 'UserExpired'), ('Discontinued', 'Discontinued')], max_length=20)),
                ('createdby', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='EM_ex',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('district', models.CharField(blank=True, max_length=255, null=True)),
                ('created', models.DateField(auto_now_add=True)),
                ('expirydate', models.DateField(auto_now_add=True)),
                ('user_type', models.CharField(choices=[('teamlead', 'teamlead'), ('desk_ex', 'desk_ex'), ('police_ex', 'police_ex'), ('ambulance_ex', 'ambulance_ex'), ('PCR', 'PCR'), ('ACR', 'ACR')], max_length=20)),
                ('idProofno', models.CharField(blank=True, max_length=255, null=True)),
                ('file_idProof', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.CharField(choices=[('Created', 'Created'), ('UserVerified', 'UserVerified'), ('StateAdminVerified', 'StateAdminVerified'), ('UserExpired', 'UserExpired'), ('Discontinued', 'Discontinued')], max_length=20)),
                ('createdby', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='EMCall',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField(auto_now_add=True, verbose_name='start_time')),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('pending', 'pending'), ('desk_ex_assigned', 'desk_ex_assigned'), ('broadcast_pending', 'broadcast_pending'), ('field_ex_aproaching', 'field_ex_aproaching'), ('field_ex_arrived', 'field_ex_arrived'), ('closed_false_allert', 'closed_false_allert'), ('closed', 'closed')], max_length=30)),
                ('closer_comment', models.TextField(blank=True, null=True)),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='DeviceTag_id', to='skytron_api.devicetag')),
            ],
        ),
        migrations.CreateModel(
            name='EMCallAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField(auto_now_add=True, verbose_name='start_time')),
                ('accept_time', models.DateTimeField(blank=True, null=True)),
                ('arrived_time', models.DateTimeField(blank=True, null=True)),
                ('complete_time', models.DateTimeField(blank=True, null=True)),
                ('reject_time', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('pending', 'pending'), ('accepted', 'accepted'), ('rejected', 'rejected'), ('arriving', 'arriving'), ('arrived', 'arrived'), ('closed_false_allert', 'closed_false_allert'), ('closed', 'closed')], max_length=30)),
                ('type', models.CharField(choices=[('teamlead', 'teamlead'), ('desk_ex', 'desk_ex'), ('police_ex', 'police_ex'), ('ambulance_ex', 'ambulance_ex'), ('pcr', 'pcr'), ('acr', 'acr')], max_length=30)),
                ('closer_comment', models.TextField(blank=True, null=True)),
                ('desk_ex_comment', models.TextField(blank=True, null=True)),
                ('admin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='emcalladmin', to='skytron_api.em_admin')),
                ('call', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='EMCall_id', to='skytron_api.emcall')),
                ('ex', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exec_id', to='skytron_api.em_ex')),
            ],
        ),
        migrations.CreateModel(
            name='eSimProvider',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=255, verbose_name='Company Name')),
                ('gstnnumber', models.CharField(blank=True, max_length=20, null=True)),
                ('created', models.DateField(auto_now_add=True)),
                ('expirydate', models.DateField(auto_now_add=True)),
                ('gstno', models.CharField(blank=True, max_length=255, null=True)),
                ('idProofno', models.CharField(blank=True, max_length=255, null=True)),
                ('file_authLetter', models.CharField(blank=True, max_length=255, null=True)),
                ('file_companRegCertificate', models.CharField(blank=True, max_length=255, null=True)),
                ('file_GSTCertificate', models.CharField(blank=True, max_length=255, null=True)),
                ('file_idProof', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.CharField(choices=[('Created', 'Created'), ('UserVerified', 'UserVerified'), ('StateAdminVerified', 'StateAdminVerified'), ('UserExpired', 'UserExpired'), ('Discontinued', 'Discontinued')], max_length=20)),
                ('createdby', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FOTA',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deviceMode', models.IntegerField(verbose_name='Device Mode')),
                ('status', models.CharField(choices=[('active', 'Active'), ('notactive', 'Not Active')], max_length=10, verbose_name='Status')),
                ('softwareVersion', models.CharField(max_length=255, verbose_name='Software Version')),
                ('firmwarePath', models.CharField(max_length=255, verbose_name='Firmware Path')),
                ('firmwareHex', models.CharField(max_length=255, verbose_name='Firmware Hex')),
                ('createdby', models.CharField(max_length=255, verbose_name='Created By')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
            ],
        ),
        migrations.CreateModel(
            name='GPSDataLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('raw_data', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='GPSemDataLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('raw_data', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='IPList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip1', models.GenericIPAddressField()),
                ('port1', models.CharField(max_length=4)),
                ('ip2', models.GenericIPAddressField()),
                ('port2', models.CharField(max_length=4)),
                ('ip_im', models.GenericIPAddressField()),
                ('port_im', models.CharField(max_length=4)),
                ('rule', models.TextField()),
                ('status', models.CharField(choices=[('Valid', 'Valid')], max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Manufacturer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=255, verbose_name='Company Name')),
                ('gstnnumber', models.CharField(blank=True, max_length=20, null=True)),
                ('created', models.DateField(auto_now_add=True)),
                ('expirydate', models.DateField(auto_now_add=True)),
                ('gstno', models.CharField(blank=True, max_length=255, null=True)),
                ('idProofno', models.CharField(blank=True, max_length=255, null=True)),
                ('file_authLetter', models.CharField(blank=True, max_length=255, null=True)),
                ('file_companRegCertificate', models.CharField(blank=True, max_length=255, null=True)),
                ('file_GSTCertificate', models.CharField(blank=True, max_length=255, null=True)),
                ('file_idProof', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.CharField(choices=[('Created', 'Created'), ('UserVerified', 'UserVerified'), ('StateAdminVerified', 'StateAdminVerified'), ('UserExpired', 'UserExpired'), ('Discontinued', 'Discontinued')], max_length=20)),
                ('createdby', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('esim_provider', models.ManyToManyField(blank=True, related_name='eSimProvider_Manufacturer', to='skytron_api.esimprovider')),
            ],
        ),
        migrations.CreateModel(
            name='OTPRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('otpTime', models.DateTimeField(auto_now_add=True, verbose_name='OTP Time')),
                ('type', models.CharField(choices=[('email', 'Email'), ('sms', 'SMS')], max_length=5, verbose_name='Type')),
                ('user', models.IntegerField(verbose_name='User')),
                ('otp', models.CharField(max_length=255, verbose_name='OTP')),
                ('status', models.CharField(choices=[('otpsent', 'OTP Sent'), ('errorsending', 'Error Sending'), ('verified', 'Verified'), ('donotmatch', 'Do Not Match'), ('timeout', 'Timeout')], max_length=20, verbose_name='Status')),
            ],
        ),
        migrations.CreateModel(
            name='RequestLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('ip_address', models.CharField(max_length=70)),
                ('system_info', models.TextField()),
                ('request_url', models.URLField()),
                ('request_type', models.CharField(max_length=100)),
                ('headers', models.TextField()),
                ('incoming_data', models.TextField()),
                ('response_type', models.CharField(max_length=100)),
                ('error_code', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Settings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('velid_time', models.DateTimeField(auto_now_add=True, verbose_name='Valid Time')),
                ('type', models.CharField(max_length=255, verbose_name='Type')),
                ('createdby', models.CharField(max_length=255, verbose_name='Created By')),
                ('settingsstring', models.CharField(max_length=255, verbose_name='Settings String')),
                ('settingsmethod', models.CharField(max_length=255, verbose_name='Settings Method')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
            ],
        ),
        migrations.CreateModel(
            name='Settings_State',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(max_length=50, unique=True)),
                ('status', models.CharField(choices=[('active', 'active'), ('discontinued', 'discontinued')], max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Settings_VehicleCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(max_length=50, unique=True)),
                ('maxSpeed', models.CharField(max_length=5)),
                ('warnSpeed', models.CharField(max_length=5)),
            ],
        ),
        migrations.CreateModel(
            name='sms_in',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sms_text', models.CharField(max_length=500)),
                ('no', models.CharField(max_length=20)),
                ('status', models.CharField(choices=[('Received', 'Received'), ('Processed', 'Processed'), ('Error', 'Error')], max_length=20)),
                ('created', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='sms_out',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sms_text', models.CharField(max_length=500)),
                ('no', models.CharField(max_length=20)),
                ('status', models.CharField(choices=[('Queue', 'Queue'), ('Sent', 'Sent'), ('Error', 'Error')], max_length=20)),
                ('created', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='TempUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('mobile', models.CharField(max_length=15, verbose_name='Mobile')),
                ('ble_key', models.CharField(blank=True, max_length=15, null=True, verbose_name='ble_key')),
                ('session_key', models.CharField(max_length=100, unique=True, verbose_name='session_key')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('otp', models.CharField(default='123456', max_length=100)),
                ('otp_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('em_contact', models.CharField(max_length=15, verbose_name='em_contact')),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('last_activity', models.DateTimeField(blank=True, null=True)),
                ('online', models.BooleanField(default=False)),
                ('feedback', models.TextField(blank=True, null=True, verbose_name='feedback')),
                ('em_lat', models.FloatField(blank=True, null=True, verbose_name='em_lat')),
                ('em_lon', models.FloatField(blank=True, null=True, verbose_name='em_lon')),
                ('em_msg', models.TextField(blank=True, null=True, verbose_name='em_msg')),
                ('em_time', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='VehicleOwner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Company Name')),
                ('created', models.DateField(auto_now_add=True)),
                ('expirydate', models.DateField(auto_now_add=True)),
                ('idProofno', models.CharField(blank=True, max_length=255, null=True)),
                ('file_idProof', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.CharField(choices=[('Created', 'Created'), ('UserVerified', 'UserVerified'), ('UserExpired', 'UserExpired'), ('Discontinued', 'Discontinued')], max_length=20)),
                ('createdby', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('users', models.ManyToManyField(related_name='manufacturers', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='StateAdmin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateField(auto_now_add=True)),
                ('expirydate', models.DateField(auto_now_add=True)),
                ('idProofno', models.CharField(blank=True, max_length=255, null=True)),
                ('file_idProof', models.CharField(blank=True, max_length=255, null=True)),
                ('file_authorisation_letter', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.CharField(choices=[('Created', 'Created'), ('UserVerified', 'UserVerified'), ('UserExpired', 'UserExpired'), ('Discontinued', 'Discontinued')], max_length=20)),
                ('createdby', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('state', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='skytron_api.settings_state')),
                ('users', models.ManyToManyField(related_name='stateadmin_User', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Settings_ip3',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateField(auto_now_add=True)),
                ('ip_tracking', models.CharField(blank=True, max_length=255, null=True)),
                ('ip_tracking2', models.CharField(blank=True, max_length=255, null=True)),
                ('ip_sos', models.CharField(blank=True, max_length=255, null=True)),
                ('port_tracking', models.CharField(blank=True, max_length=255, null=True)),
                ('port_tracking2', models.CharField(blank=True, max_length=255, null=True)),
                ('port_sos', models.CharField(blank=True, max_length=255, null=True)),
                ('sms_tracking', models.CharField(blank=True, max_length=255, null=True)),
                ('sms_tracking2', models.CharField(blank=True, max_length=255, null=True)),
                ('sms_sos', models.CharField(blank=True, max_length=255, null=True)),
                ('createdby', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('devicemodel', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='skytron_api.devicemodel')),
                ('state', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='skytron_api.settings_state')),
            ],
        ),
        migrations.CreateModel(
            name='Settings_ip',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateField(auto_now_add=True)),
                ('ip_tracking', models.CharField(blank=True, max_length=255, null=True)),
                ('ip_tracking2', models.CharField(blank=True, max_length=255, null=True)),
                ('ip_sos', models.CharField(blank=True, max_length=255, null=True)),
                ('port_tracking', models.CharField(blank=True, max_length=255, null=True)),
                ('port_tracking2', models.CharField(blank=True, max_length=255, null=True)),
                ('port_sos', models.CharField(blank=True, max_length=255, null=True)),
                ('sms_tracking', models.CharField(blank=True, max_length=255, null=True)),
                ('sms_tracking2', models.CharField(blank=True, max_length=255, null=True)),
                ('sms_sos', models.CharField(blank=True, max_length=255, null=True)),
                ('createdby', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('devicemodel', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='skytron_api.devicemodel')),
                ('state', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='skytron_api.settings_state')),
            ],
        ),
        migrations.CreateModel(
            name='Settings_hp_freq',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateField(auto_now_add=True)),
                ('freq', models.CharField(blank=True, max_length=255, null=True)),
                ('createdby', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('devicemodel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='skytron_api.devicemodel')),
            ],
        ),
        migrations.CreateModel(
            name='Settings_firmware',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateField(auto_now_add=True)),
                ('firmware_vertion', models.CharField(blank=True, max_length=255, null=True)),
                ('file_bin', models.CharField(blank=True, max_length=255, null=True)),
                ('createdby', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('devicemodel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='skytron_api.devicemodel')),
            ],
        ),
        migrations.CreateModel(
            name='Settings_District',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('district', models.CharField(max_length=50, unique=True)),
                ('district_code', models.CharField(max_length=8, unique=True)),
                ('status', models.CharField(choices=[('active', 'active'), ('discontinued', 'discontinued')], max_length=20)),
                ('state', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='skytron_api.settings_state')),
            ],
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('loginTime', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Login Time')),
                ('token', models.CharField(blank=True, max_length=255, null=True, verbose_name='Token')),
                ('token_tmp', models.CharField(blank=True, max_length=255, null=True, verbose_name='Token_tmp')),
                ('otp', models.IntegerField(blank=True, null=True, verbose_name='OTP')),
                ('status', models.CharField(choices=[('otpsent', 'OTP Sent'), ('login', 'Login'), ('logout', 'Logout'), ('timeout', 'Timeout')], max_length=10, verbose_name='Status')),
                ('lastactivity', models.DateTimeField(default=django.utils.timezone.now, verbose_name='lastactivity')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Route',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Deleted', 'Deleted')], max_length=20)),
                ('route', models.TextField()),
                ('routepoints', models.TextField()),
                ('created', models.DateField(auto_now_add=True)),
                ('createdby', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='skytron_api.devicestock')),
            ],
        ),
        migrations.CreateModel(
            name='Retailer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=255, verbose_name='Company Name')),
                ('gstnnumber', models.CharField(blank=True, max_length=20, null=True)),
                ('created', models.DateField(auto_now_add=True)),
                ('expirydate', models.DateField(auto_now_add=True)),
                ('gstno', models.CharField(blank=True, max_length=255, null=True)),
                ('idProofno', models.CharField(blank=True, max_length=255, null=True)),
                ('file_authLetter', models.CharField(blank=True, max_length=255, null=True)),
                ('file_companRegCertificate', models.CharField(blank=True, max_length=255, null=True)),
                ('file_GSTCertificate', models.CharField(blank=True, max_length=255, null=True)),
                ('file_idProof', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.CharField(choices=[('Created', 'Created'), ('UserVerified', 'UserVerified'), ('StateAdminVerified', 'StateAdminVerified'), ('UserExpired', 'UserExpired'), ('Discontinued', 'Discontinued')], max_length=20)),
                ('createdby', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('district', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='skytron_api.settings_district')),
                ('manufacturer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='skytron_api.manufacturer')),
                ('users', models.ManyToManyField(related_name='Retailer_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Notice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateField(auto_now_add=True)),
                ('file', models.CharField(blank=True, max_length=255, null=True)),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('detail', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.CharField(blank=True, max_length=25, null=True)),
                ('createdby', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='manufacturer',
            name='state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='skytron_api.settings_state'),
        ),
        migrations.AddField(
            model_name='manufacturer',
            name='users',
            field=models.ManyToManyField(related_name='manufacturers_user', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='GPSData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entry_time', models.DateTimeField(auto_now_add=True)),
                ('packet_type', models.CharField(max_length=2)),
                ('alert_id', models.CharField(max_length=4)),
                ('packet_status', models.CharField(max_length=4)),
                ('gps_status', models.CharField(max_length=4)),
                ('date', models.CharField(max_length=8)),
                ('time', models.CharField(max_length=6)),
                ('latitude', models.FloatField()),
                ('latitude_dir', models.CharField(max_length=5)),
                ('longitude', models.FloatField()),
                ('longitude_dir', models.CharField(max_length=5)),
                ('speed', models.FloatField()),
                ('heading', models.FloatField()),
                ('satellites', models.IntegerField()),
                ('altitude', models.IntegerField()),
                ('pdop', models.FloatField()),
                ('hdop', models.FloatField()),
                ('network_operator', models.CharField(max_length=8)),
                ('ignition_status', models.CharField(max_length=4)),
                ('main_power_status', models.CharField(max_length=4)),
                ('main_input_voltage', models.FloatField()),
                ('internal_battery_voltage', models.FloatField()),
                ('emergency_status', models.CharField(max_length=4)),
                ('box_tamper_alert', models.CharField(max_length=4)),
                ('gsm_signal_strength', models.CharField(max_length=5)),
                ('mcc', models.CharField(max_length=6)),
                ('mnc', models.CharField(max_length=6)),
                ('lac', models.CharField(max_length=6)),
                ('cell_id', models.CharField(max_length=6)),
                ('nbr1_cell_id', models.CharField(max_length=6)),
                ('nbr1_lac', models.CharField(max_length=6)),
                ('nbr1_signal_strength', models.CharField(max_length=6)),
                ('nbr2_cell_id', models.CharField(max_length=6)),
                ('nbr2_lac', models.CharField(max_length=6)),
                ('nbr2_signal_strength', models.CharField(max_length=4)),
                ('nbr3_cell_id', models.CharField(max_length=6)),
                ('nbr3_lac', models.CharField(max_length=6)),
                ('nbr3_signal_strength', models.CharField(max_length=6)),
                ('nbr4_cell_id', models.CharField(max_length=6)),
                ('nbr4_lac', models.CharField(max_length=6)),
                ('nbr4_signal_strength', models.CharField(max_length=6)),
                ('digital_input_status', models.CharField(max_length=6)),
                ('digital_output_status', models.CharField(max_length=4)),
                ('frame_number', models.IntegerField()),
                ('odometer', models.FloatField()),
                ('device_tag', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='skytron_api.devicetag')),
            ],
        ),
        migrations.AddField(
            model_name='esimprovider',
            name='state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='skytron_api.settings_state'),
        ),
        migrations.AddField(
            model_name='esimprovider',
            name='users',
            field=models.ManyToManyField(related_name='eSimProvider_User', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='esimActivationRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='creates_at')),
                ('valid_from', models.DateTimeField(null=True)),
                ('valid_upto', models.DateTimeField(null=True)),
                ('accepted_at', models.DateTimeField(null=True)),
                ('status', models.CharField(choices=[('pending', 'pending'), ('valid', 'valid'), ('invalid', 'invalid')], max_length=20, verbose_name='Status')),
                ('ceated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='skytron_api.retailer')),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='skytron_api.devicestock')),
                ('eSim_provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='skytron_api.esimprovider')),
            ],
        ),
        migrations.CreateModel(
            name='EMUserLocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('em_lat', models.FloatField(blank=True, null=True, verbose_name='em_lat')),
                ('em_lon', models.FloatField(blank=True, null=True, verbose_name='em_lon')),
                ('speed', models.FloatField(blank=True, null=True, verbose_name='speed')),
                ('time', models.DateTimeField(auto_now_add=True, verbose_name='time')),
                ('field_ex', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='field_executive1_id_location', to='skytron_api.em_ex')),
            ],
        ),
        migrations.CreateModel(
            name='EMTeams',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created_at')),
                ('activated_at', models.DateTimeField(blank=True, null=True)),
                ('removed_at', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('NotActive', 'NotActive'), ('Active', 'Active'), ('Removed', 'Removed')], max_length=20)),
                ('name', models.TextField()),
                ('detail', models.TextField()),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='SOS_admin_createdby_team', to='skytron_api.em_admin')),
                ('members', models.ManyToManyField(related_name='SOS_Executive_member_team', to='skytron_api.em_ex')),
                ('state', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='skytron_api.settings_state')),
                ('teamlead', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='skytron_api.em_ex')),
            ],
        ),
        migrations.CreateModel(
            name='EMGPSLocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message_type', models.CharField(max_length=3)),
                ('device_imei', models.CharField(max_length=15)),
                ('packet_status', models.CharField(max_length=2)),
                ('date', models.DateField()),
                ('time', models.TimeField()),
                ('gps_validity', models.CharField(max_length=5)),
                ('latitude', models.FloatField()),
                ('latitude_direction', models.CharField(max_length=5)),
                ('longitude', models.FloatField()),
                ('longitude_direction', models.CharField(max_length=5)),
                ('altitude', models.FloatField()),
                ('speed', models.FloatField()),
                ('distance', models.FloatField()),
                ('provider', models.CharField(max_length=50)),
                ('vehicle_reg_no', models.CharField(max_length=20)),
                ('reply_mob_no', models.CharField(max_length=15)),
                ('device_tag', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='skytron_api.devicetag')),
            ],
        ),
        migrations.CreateModel(
            name='EMCallMessages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField(auto_now_add=True, verbose_name='time')),
                ('message', models.TextField()),
                ('assignment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='EMCallAssignm11ent111_id', to='skytron_api.emcallassignment')),
                ('call', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='EMCa111ll_id111', to='skytron_api.emcall')),
            ],
        ),
        migrations.CreateModel(
            name='EMCallBroadcast',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='start_time')),
                ('accept_at', models.DateTimeField(blank=True, null=True)),
                ('canceled_time', models.DateTimeField(blank=True, null=True)),
                ('radius', models.FloatField(blank=True, null=True)),
                ('status', models.CharField(choices=[('pending', 'pending'), ('accepted', 'accepted'), ('timeout', 'timeout'), ('canceled', 'canceled')], max_length=30)),
                ('type', models.CharField(choices=[('police_ex', 'police_ex'), ('ambulance_ex', 'ambulance_ex'), ('pcr', 'pcr'), ('acr', 'acr')], max_length=30)),
                ('acceted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='accptedbyexec_id', to='skytron_api.em_ex')),
                ('admin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='emcalladminb', to='skytron_api.em_admin')),
                ('call', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='EMCallb_id', to='skytron_api.emcall')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='createdbyexec_id', to='skytron_api.em_ex')),
            ],
        ),
        migrations.CreateModel(
            name='EMCallBackupRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField(auto_now_add=True, verbose_name='time')),
                ('type', models.CharField(choices=[('police_ex', 'police_ex'), ('ambulance_ex', 'ambulance_ex')], max_length=30)),
                ('quantity', models.IntegerField()),
                ('accepted', models.BooleanField()),
                ('message', models.TextField()),
                ('assignment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='EMCallAssignment111_id', to='skytron_api.emcallassignment')),
                ('call', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='EMCall_id111', to='skytron_api.emcall')),
            ],
        ),
        migrations.AddField(
            model_name='emcall',
            name='team',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='EMTeams_id', to='skytron_api.emteams'),
        ),
        migrations.AddField(
            model_name='em_ex',
            name='state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='skytron_api.settings_state'),
        ),
        migrations.AddField(
            model_name='em_ex',
            name='users',
            field=models.ManyToManyField(related_name='SOS_ex_user', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='em_admin',
            name='state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='skytron_api.settings_state'),
        ),
        migrations.AddField(
            model_name='em_admin',
            name='users',
            field=models.ManyToManyField(related_name='EM_admin', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='dto_rto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dto_rto', models.CharField(choices=[('DTO', 'DTO'), ('RTO', 'RTO')], max_length=20)),
                ('district', models.CharField(blank=True, max_length=255, null=True)),
                ('created', models.DateField(auto_now_add=True)),
                ('expirydate', models.DateField(auto_now_add=True)),
                ('gstno', models.CharField(blank=True, max_length=255, null=True)),
                ('idProofno', models.CharField(blank=True, max_length=255, null=True)),
                ('file_idProof', models.CharField(blank=True, max_length=255, null=True)),
                ('file_authorisation_letter', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.CharField(choices=[('Created', 'Created'), ('UserVerified', 'UserVerified'), ('StateAdminVerified', 'StateAdminVerified'), ('UserExpired', 'UserExpired'), ('Discontinued', 'Discontinued')], max_length=20)),
                ('createdby', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('state', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='skytron_api.settings_state')),
                ('users', models.ManyToManyField(related_name='dto_rto_User', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Driver',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(max_length=55)),
                ('phone_no', models.CharField(max_length=55)),
                ('license_no', models.CharField(max_length=55)),
                ('photo', models.CharField(max_length=555, null=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='createby_USERdriver', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='devicetag',
            name='drivers',
            field=models.ManyToManyField(blank=True, related_name='driver_vehicles', to='skytron_api.driver'),
        ),
        migrations.AddField(
            model_name='devicetag',
            name='tagged_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='devicetag',
            name='vehicle_owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='skytron_api.vehicleowner'),
        ),
        migrations.AddField(
            model_name='devicestock',
            name='dealer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='skytron_api.retailer'),
        ),
        migrations.AddField(
            model_name='devicestock',
            name='esim_provider',
            field=models.ManyToManyField(blank=True, related_name='eSimProvider_devicestock', to='skytron_api.esimprovider'),
        ),
        migrations.AddField(
            model_name='devicestock',
            name='model',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='skytron_api.devicemodel'),
        ),
        migrations.AddField(
            model_name='devicemodel',
            name='eSimProviders',
            field=models.ManyToManyField(blank=True, related_name='eSimProvider_devicemodle', to='skytron_api.esimprovider'),
        ),
        migrations.CreateModel(
            name='DeviceCOP',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cop_no', models.CharField(max_length=255)),
                ('cop_validity', models.DateField()),
                ('cop_file', models.FileField(blank=True, null=True, upload_to='cop_files/')),
                ('created', models.DateTimeField()),
                ('valid', models.BooleanField(default=True)),
                ('latest', models.BooleanField(default=True)),
                ('status', models.CharField(choices=[('Manufacturer_OTP_Sent', 'Manufacturer OTP Sent'), ('Manufacturer_OTP_Verified', 'Manufacturer OTP Verified'), ('StateAdminOTPSend', 'State Admin OTP Sent'), ('StateAdminApproved', 'State Admin Approved')], max_length=255)),
                ('otp', models.CharField(blank=True, max_length=6, null=True)),
                ('otp_time', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('device_model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='skytron_api.devicemodel')),
            ],
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('Created', 'Created'), ('FactoryTestOK', 'FactoryTestOK'), ('ShipedtoRetailer', 'ShipedtoRetailer'), ('Sold', 'Sold'), ('Installed', 'Installed'), ('Active', 'Active'), ('DeviceError', 'Device Error'), ('Discontinued', 'Discontinued')], max_length=20)),
                ('softwareLatestVersion', models.CharField(blank=True, max_length=20, null=True)),
                ('vehicle', models.IntegerField()),
                ('created', models.DateField(auto_now_add=True)),
                ('createdby', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('deviceModel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='skytron_api.devicemodel')),
            ],
        ),
        migrations.CreateModel(
            name='Confirmation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(max_length=32, unique=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('type', models.CharField(choices=[('email', 'Email'), ('sms', 'SMS'), ('pw_rst', 'Password Resset')], max_length=20, verbose_name='Type')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AlertsLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('Route', 'Route'), ('Em', 'Em'), ('Eng', 'Eng'), ('OverSpeed', 'OverSpeed'), ('LowIntBat', 'LowIntBat'), ('LowExtBat', 'LowExtBat'), ('ExtBatDiscnt', 'ExtBatDiscnt'), ('BoxTemp', 'BoxTemp'), ('EmTemp', 'EmTemp'), ('Tilt', 'Tilt'), ('HarshBreak', 'HarshBreak'), ('HarshTurn', 'HarshTurn'), ('HarshAccileration', 'HarshAccileration')], max_length=50)),
                ('status', models.CharField(blank=True, choices=[('in', 'in'), ('out', 'out'), ('', '')], max_length=50, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('deviceTag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='skytron_api.devicetag')),
                ('em_ref', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='skytron_api.emcall')),
                ('gps_ref', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='skytron_api.gpsdata')),
                ('route_ref', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='skytron_api.route')),
                ('state', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='skytron_api.settings_state')),
            ],
        ),
    ]
