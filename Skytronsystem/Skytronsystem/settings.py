"""
Django settings for Skytronsystem project.

Generated by 'django-admin startproject' using Django 4.2.9.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
import os  

#mail_id = os.environ.get("MAIL_ID", "testskytrack@gmail.com")
#mail_pw = os.environ.get("MAIL_PW", " ")

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret! 
SECRET_KEY = os.environ.get('SECRET_KEY', ' ')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True #os.environ.get('DEBUG', 'False') == 'True'
# True

ALLOWED_HOSTS = os.environ.get('ALLOWED_HOSTS', '').split(',')
#ALLOWED_HOSTS = ['api.skytron.in', 'skytron.in','dev.skytron.in','api-dev.skytron.in', 'skytrack.tech']
#['http://localhost:3000/','40.81.241.29','20.210.207.21','api.skytron.in','skytron.in','localhost','172.17.0.1','skytron.in','216.10.244.243','skytrack.tech','https://www.skytrack.tech','admiring-solomon.216-10-244-243.plesk.page']



# Secure cookies
CSRF_COOKIE_SECURE = True
CSRF_COOKIE_HTTPONLY = True
SESSION_COOKIE_SECURE = True
SESSION_COOKIE_HTTPONLY = True

# Enforce HTTPS
"""SECURE_SSL_REDIRECT = True
SECURE_HSTS_SECONDS = 31536000
SECURE_HSTS_INCLUDE_SUBDOMAINS = True
SECURE_HSTS_PRELOAD = True
SECURE_REFERRER_POLICY = 'strict-origin'
"""

DATA_UPLOAD_MAX_NUMBER_FIELD = 71193766
# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',    
    'rest_framework',      
    'bootstrap4',
    'csp',
    'bootstrap_datepicker_plus',  
    'drf_spectacular', 
    'corsheaders',
    'skytron_api',
    "django_extensions",
    'rest_framework.authtoken', 
]

FORM_RENDERER = 'django.forms.renderers.DjangoTemplates'
MIDDLEWARE = [

    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware', 
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'csp.middleware.CSPMiddleware',
    'skytron_api.middleware.RequestLoggerMiddleware'     
]
 
# Content Security Policy settings
"""
CSP_DEFAULT_SRC = ("'self'",)  # Default source for all content types
CSP_SCRIPT_SRC = ("'self'", )  # For JavaScript
CSP_STYLE_SRC = ("'self'",)  # For CSS
CSP_IMG_SRC = ("'self'",)  # For images
CSP_FONT_SRC = ("'self'",)  # For fonts
CSP_CONNECT_SRC = ("'self'", )  # For AJAX, WebSockets
CSP_OBJECT_SRC = ("'none'",)  # Disallow plugins like Flash
CSP_FRAME_SRC = ("'self'",)  # Allowed iframes
CSP_MEDIA_SRC = ("'self'",)  # For media like audio and video

# Optionally report violations
CSP_REPORT_ONLY = False  # Set to True to test the policy without enforcing
CSP_REPORT_URI = 'https://'
"""

  
# Security settings
SECURE_CONTENT_TYPE_NOSNIFF = True  # Prevents the browser from guessing the content type
SECURE_BROWSER_XSS_FILTER = True   # Enables XSS protection in browsers that support it

"""
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'skytron_api.middleware.RequestLoggerMiddleware'      
"""

ROOT_URLCONF = 'Skytronsystem.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'Skytronsystem.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

# Print database environment variables for debugging
print("=== DATABASE ENVIRONMENT VARIABLES ===")
print(f"DB_NAME: {os.environ.get('DB_NAME', 'NOT SET')}")
print(f"DB_USER: {os.environ.get('DB_USER', 'NOT SET')}")
print(f"DB_PASSWORD: {os.environ.get('DB_PASSWORD', 'NOT SET')}")
print(f"DB_HOST: {os.environ.get('DB_HOST', 'NOT SET')}")
print(f"DB_PORT: {os.environ.get('DB_PORT', 'NOT SET')}")
print("========================================")

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': os.environ.get('DB_NAME', 'skytrondb_main'),
        'USER': os.environ.get('DB_USER', 'dbadmin'),
        'PASSWORD': os.environ.get('DB_PASSWORD', 'lask1028zmnx'),
        'HOST': os.environ.get('DB_HOST', '135.235.166.209'),
        'PORT': os.environ.get('DB_PORT', '5432'),
    }
}


 
# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators
AUTH_USER_MODEL = 'skytron_api.User'


AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

CORS_ALLOW_METHODS = [
    "GET",
    "POST",
]
CORS_ALLOW_HEADERS = [
    "content-type",
    "authorization",
    "x-csrftoken",
]
CORS_ALLOWED_ORIGINS = ["https://www.skytrack.tech",
    "http://localhost:3000",  
    "https://localhost:3000", 
    "https://skytrack.tech:3000", 
    "https://gromed.in",  
    "https://api.gromed.in",  
    "https://skytrack.tech:2000",  
    "https://skytrack.tech",
    'https://skytron.in',
    'https://api.skytron.in',
    'https://skytron.in',
    'https://dev-api.skytron.in',
    'http://dev-api.skytron.in',
    'https://dev.skytron.in',
    'http://dev.skytron.in',
    'https://dev.skytron.in',
    "https://dev.skytrack.tech",  # Add your frontend domain(s) here
    #"https://yourfrontenddomain.com",
     # to allow all origins
]
CORS_ALLOW_ALL_ORIGINS = True
# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

#STATIC_URL = 'static/' 
 

STATIC_URL = '/static/'
STATIC_ROOT = BASE_DIR / '../staticfiles' 

# WhiteNoise settings to enable static file compression and caching
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'
# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

REST_FRAMEWORK = {
    'DEFAULT_THROTTLE_CLASSES': [
        'rest_framework.throttling.AnonRateThrottle',  # For unauthenticated users
        'rest_framework.throttling.UserRateThrottle',  # For authenticated users
    ],
    'DEFAULT_THROTTLE_RATES': {
        'anon': '10/minute',   # Limit anonymous users to 10 requests per minute
        'user': '500/hour',    # Limit authenticated users to 100 requests per hour
    },

    'DEFAULT_SCHEMA_CLASS': 'drf_spectacular.openapi.AutoSchema',
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.TokenAuthentication',
        # ... other authentication classes
    ],
     
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ],
    
}


CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',
        'LOCATION': 'unique-snowflake',
    }
}

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.titan.email'  # Use your email provider's SMTP server
EMAIL_PORT = 465
EMAIL_USE_SSL = True
EMAIL_USE_TLS = False
EMAIL_HOST_USER = "noreply@skytron.in" # os.environ.get('EMAIL_HOST_USER', 'default-email@gmail.com')
EMAIL_HOST_PASSWORD = "Developer@18062025" #os.environ.get('EMAIL_HOST_PASSWORD', 'default-password')


AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
]
LOGIN_URL = 'admin:login'
LOGIN_REDIRECT_URL = 'admin:index' 

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'file': {
            'level': 'ERROR',
            'class': 'logging.FileHandler',
            'filename': BASE_DIR / 'logs/errors.log',
        },
    },
    'loggers': {
        'django': {
            'handlers': ['file'],
            'level': 'ERROR',
            'propagate': True,
        },
    },
}

 


